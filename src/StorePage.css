.store-container {
  background-color: #000000;
  color: #ffffff;
  position: relative;
  padding: 2rem;
  min-height: 100vh;
  text-align: center;
}

.store-title {
  text-align: center;
  font-size: 7rem;
  margin-bottom: 7rem;
}

.product-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 1.5rem;
  z-index: 1;
  position: relative;
  margin-top: 100px;
}

.product-card {
  background-color: #1a1a1a;
  border: 1px solid #333333;
  border-radius: 8px;
  padding: 1.5rem;
  text-align: center;
  transition: transform 0.2s ease-in-out, box-shadow 0.3s ease;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  cursor: pointer;
}

.product-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 0 15px 2px #A020F0;
}

.product-card img {
  max-width: 100%;
  height: auto;
  border-radius: 4px;
  margin-top: 1rem;
}

.rotating-text-container {
  text-align: center;
  margin-bottom: 3rem;
  font-size: 3rem;
  font-weight: 500;
  color: #cccccc;
  z-index: 1;
  position: relative;
}

/* === NEW AND CORRECTED STYLES START HERE === */

/* Container for buttons on the product card */
.action-buttons {
  margin-top: 1rem;
}

/* === NEW AND IMPROVED ADD TO CART BUTTON === */

.add-to-cart-btn {
  /* --- A more modern, eye-catching gradient background --- */
  background: linear-gradient(45deg, #05160c, #f6f6f7); 
  
  color: white; /* Text color remains white */
  padding: 10px 20px; /* Slightly larger padding for better presence */
  border: none;
  border-radius: 8px; /* A slightly more rounded corner */
  font-weight: bold;
  cursor: pointer;
  
  /* --- Enhanced transition for a smoother, multi-part animation --- */
  transition: transform 0.3s ease, box-shadow 0.3s ease, background-color 0.3s ease;
  
  /* --- Adds a subtle initial shadow for depth --- */
  box-shadow: 0 4px 15px rgba(197, 25, 25, 0.2);
}

.add-to-cart-btn:hover {
  /* --- The button smoothly lifts up and grows slightly --- */
  transform: translateY(-3px) scale(1.05);

  /* --- A more prominent glow effect on hover for visual feedback --- */
  box-shadow: 0 7px 25px rgba(0, 123, 255, 0.4);
}

/* Delete button (for admin) */
.delete-btn {
  background-color: #DC3545;
  color: rgb(255, 251, 251);
  padding: 8px 16px;
  border: none;
  border-radius: 5px;
  font-weight: bold;
  cursor: pointer;
  transition: background-color 0.3s ease, transform 0.2s ease;
}

.delete-btn:hover {
  background-color: #c82333;
  transform: scale(1.05);
}

/* Add Product button (top right of page for admin) */
.add-product-btn {
  position: absolute;
  top: 2rem;
  right: 2rem;
  background-color: #28a745;
  color: white;
  border: none;
  border-radius: 50px;
  padding: 10px 20px;
  font-size: 1rem;
  font-weight: bold;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  z-index: 10;
  transition: background-color 0.3s ease, transform 0.2s ease;
}

.add-product-btn:hover {
  background-color: #218838;
  transform: scale(1.05);
}

.add-product-btn .plus-icon {
  font-size: 1.2rem;
  line-height: 1;
}

.store-container {
 position: relative; /* This is important for positioning the search bar */
 /* Your existing styles */
}

/* --- The Main Container gets all the styling --- */
.search-bar-container {
  /* Positioning - keep your existing values */
  position: absolute;
  top: 2%;
  left: 88%;
  transform: translate(-50%, -50%);

  /* This is the key: The container itself is the glossy box */
  display: flex;
  align-items: center; /* Vertically aligns items inside */
  background-color: rgba(255, 255, 255, 0.2);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.3);
  border-radius: 25px; /* A single radius for the whole container */
  padding: 0 5px; /* Add a little padding inside the container */
  height: 44px; /* Set a fixed height for perfect consistency */
}


/* --- The Input Field is now completely transparent --- */
.search-input {
  background: transparent; /* No background */
  border: none;          /* No border */
  outline: none;         /* No outline on focus */
  
  flex-grow: 1; /* Allows the input to take up all available space */
  padding: 0 15px;
  font-size: 14px;
  color: #000000;
  height: 100%; /* Fills the container height */
}

.search-input::placeholder {
  color: #000000;
}


/* --- The new separator line element --- */
.search-separator {
  width: 1px; /* The line's thickness */
  height: 60%; /* Make it shorter than the container */
  background-color: rgba(255, 255, 255, 0.3); /* Same color as the border */
}


/* --- The Button is also transparent --- */
.search-button {
  background: transparent; /* No background */
  border: none;          /* No border */
  outline: none;         /* No outline */
  
  cursor: pointer;
  padding: 0 10px; /* Adjust padding as needed */
  height: 100%; /* Fills the container height */
  display: flex;
  align-items: center;
}

.search-button img {
  width: 20px;
  height: 20px;
}

.cart-container {
  /* Positioning - keep your existing values */
  position: absolute;
  top: 7%;
  left: 4%;
  transform: translate(-50%, -50%);
}

.cart-button {
  border: none;
  background: none;
  padding: 0;
}

.cart-button img {
  width: 69px;
  height: 69px;
}


.menu-container {
  /* Positioning - keep your existing values */
  position: absolute;
  top: 3%;
  left: 4%;
  transform: translate(-50%, -50%);
}

.menu-button {
  border: none;
  background: none;
  padding: 0;
}

.menu-button img {
  width: 70px;
  height: 70px;
}

/* ================================================= */
/* === NEW, DYNAMIC SLIDER & ICON ANIMATIONS === */
/* ================================================= */

/* --- 1. Menu Icon Animation --- */
/* Add a smooth transition to the menu button itself */
/* --- UPDATED/NEW CSS FOR SYNCHRONIZED MENU ICON --- */

/* 1. Update your existing menu-container rule */
.menu-container {
  position: fixed;
  top: 40px;
  left: 40px;
  z-index: 1002; /* IMPORTANT: Ensure this is higher than the slider's z-index */
  transition: transform 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

/* 2. Add this new rule for the open state */
.menu-container.slider-open {
  /* This value MUST match the width of your .cart-slider */
  transform: translateX(120px);
}

/* 3. (Optional but recommended) Add these rules to animate the icon itself */
.menu-button {
  transition: transform 0.5s ease-out;
}

.menu-container.slider-open .menu-button {
  /* This rotates the icon to look like a "plus" or "close" symbol */
  transform: rotate(270deg);
}

/* When the slider is active, we can style the menu button differently.
   However, we need to adjust the JS slightly to add a class to the button.
   For a pure CSS solution, we'll focus on the slider and its contents.
   (If you wanted the menu icon to change, you'd add an active class to it too) */


/* --- 2. The Slider: Now with Rotation and "Overshoot" --- */
.cart-slider {
  position: fixed;
  top: 0;
  left: 0;
  width: 180px;
  height: 270px;
  background-color: transparent;
  z-index: 1001;
  display: flex;
  justify-content: center;
  align-items: center;
  border-bottom-right-radius: 25px; /* Slightly more pronounced curve */

  /* Initial State: Further off-screen and slightly rotated back */
  transform: translateX(-110%) rotate(-15deg);
  opacity: 0.8; /* Start slightly transparent */
  
  /* A custom "cubic-bezier" creates the overshoot/bounce effect */
  transition: transform 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275), 
              opacity 0.4s ease;
}

/* Active State: The slider is now on-screen and straight */
.cart-slider.active {
  transform: translateX(0) rotate(0deg);
  opacity: 1;
}


/* --- 3. The Cart Icon: "Pop In" Animation --- */

/* Keyframes define the steps of a complex animation */
@keyframes pop-in {
  0% {
    opacity: 0;
    transform: scale(0.5);
  }
  60% {
    opacity: 1;
    transform: scale(1.2); /* Overshoot the size */
  }
  100% {
    opacity: 1;
    transform: scale(1); /* Settle back to normal size */
  }
}

/* Initially, the cart button is invisible and has no animation */
.cart-slider .cart-button {
  opacity: 0; /* Start completely hidden */
}

/* When the slider is active, apply the pop-in animation to the cart button */
.cart-slider.active .cart-button {
  /* animation: [animation-name] [duration] [timing-function] [delay] [fill-mode]; */
  animation: pop-in 0.5s ease-out 0.3s forwards;
}
/* 
  - `0.5s`: The pop animation takes half a second.
  - `ease-out`: The animation starts fast and slows down.
  - `0.3s`: IMPORTANT! This delays the start of the pop animation, so it happens *after* the slider is mostly on-screen.
  - `forwards`: The element will retain the styles of the final keyframe (100%) when the animation is over.
*/


/* --- 4. The Overlay: Fades in smoothly --- */
.slider-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0); /* Start fully transparent */
  z-index: 1000;
  transition: background-color 0.5s ease-in-out;
}

/* When the slider is active, fade the overlay in */
.cart-slider.active + .slider-overlay {
  background-color: rgba(0, 0, 0, 0.6);
}

/* === NEW CSS FOR CART SLIDER CONTENT === */

/* Style for the list of items in the cart */
.cart-items-list {
  list-style: none;
  padding: 0;
  margin: 20px 0;
  width: 100%;
  color: #000; /* Dark text for readability on a light background */
}

.cart-item {
  display: flex;
  align-items: center;
  margin-bottom: 15px;
  background-color: rgba(255, 255, 255, 0.9);
  padding: 10px;
  border-radius: 8px;
  box-shadow: 0 2px 5px rgba(0,0,0,0.1);
}

.cart-item-image {
  width: 50px;
  height: 50px;
  object-fit: cover;
  border-radius: 5px;
  margin-right: 10px;
}

.cart-item-info {
  flex-grow: 1;
  text-align: left;
}

.cart-item-info h4 {
  margin: 0;
  font-size: 0.9rem;
}

.cart-item-info p {
  margin: 5px 0 0;
  font-size: 0.8rem;
  color: #555;
}

.cart-item-controls {
  display: flex;
  align-items: center;
}

.cart-item-controls button {
  background-color: #ddd;
  border: none;
  width: 25px;
  height: 25px;
  border-radius: 50%;
  cursor: pointer;
  font-weight: bold;
}

.cart-item-controls span {
  padding: 0 10px;
  font-weight: bold;
}

.cart-item-remove {
  background: none;
  border: none;
  color: #ff3232;
  cursor: pointer;
  font-size: 1.2rem;
  margin-left: 10px;
}

.cart-total {
  margin-top: 20px;
  font-size: 1.2rem;
  font-weight: bold;
  color: #fff; /* White text for the total */
}

.cart-empty-message {
  color: #fff; /* White text for the empty message */
  margin-top: 20px;
}

/* Style for the Add to Cart button in the Product Detail modal */
.add-to-cart-btn-detail {
  background: linear-gradient(45deg, #05160c, #f6f6f7);
  color: white;
  padding: 12px 25px;
  border: none;
  border-radius: 8px;
  font-weight: bold;
  cursor: pointer;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  margin-top: 20px;
  display: block; /* Make it a block element */
  width: 100%; /* Make it full width of its container */
}

.add-to-cart-btn-detail:hover {
  transform: translateY(-3px);
  box-shadow: 0 7px 25px rgba(0, 123, 255, 0.4);
}

/* === CSS FOR "ADDED TO CART" TOAST NOTIFICATION === */

.add-to-cart-toast {
  position: fixed;
  bottom: 2rem;
  left: 50%;
  transform: translateX(-50%);
  background-color: #28a745; /* A nice green for success */
  color: white;
  padding: 1rem 2rem;
  border-radius: 8px;
  z-index: 2000; /* Ensures it appears on top of everything */
  font-weight: bold;
  box-shadow: 0 4px 15px rgba(0,0,0,0.2);
  
  /* This animation makes it fade in and then fade out */
  animation: fade-in-out 800ms forwards;
}

@keyframes fade-in-out {
  0% {
    opacity: 0;
    transform: translate(-50%, 20px);
  }
  10% {
    opacity: 1;
    transform: translate(-50%, 0);
  }
  90% {
    opacity: 1;
    transform: translate(-50%, 0);
  }
  100% {
    opacity: 0;
    transform: translate(-50%, 20px);
  }
}